/*
 *   Green: E4
 *  Yellow: C5#
 *    Blue: E5
 *     Red: A5
 *
 */





// Frequency for Simon game tones (in Hz)
#define TONE_A4 440     // red
#define TONE_C5 523     // yellow
#define TONE_D5 587 
#define TONE_E5 659     // green

// Pin 1 (PB5) for tone output
#define TONE_PIN 1

void setup() {
  // Set PB5 (Pin 1) as an output
  pinMode(TONE_PIN, OUTPUT);

  // Set Timer 0 in CTC mode (Clear Timer on Compare Match)
  TCCR0A = 0;                  // Normal operation
  TCCR0B = (1 << WGM02) | (1 << CS00);  // CTC mode, no prescaler
  TCCR0A |= (1 << COM0B0);     // Toggle OC0B (PB5) on compare match

  // Initially stop the tone
  stopTone();
}

void playTone(unsigned int frequency) {
  // Calculate the top value for the CTC mode based on the frequency
  unsigned long topValue = (F_CPU / frequency) - 1;  // (F_CPU = 8 MHz for ATtiny85 by default)

  // Set OCR0A to adjust the frequency
  OCR0A = topValue;

  // Enable the timer (it's already enabled in setup, but ensure it's running)
  TCCR0B |= (1 << CS00);  // No prescaling (timer runs at system clock)
}

void stopTone() {
  // Disable the timer to stop the tone (by disabling the clock source for Timer 0)
  TCCR0B &= ~(1 << CS00);  // Stop the timer by clearing the prescaler
}

void loop() {
  // Play Simon tones with a small delay
  playTone(TONE_A4);  // Play A4 (440 Hz)
  delay(500);          // Wait for 500ms
  stopTone();          // Stop the tone
  
  delay(200);          // Wait for a moment before the next tone

  playTone(TONE_C5);  // Play C5 (523 Hz)
  delay(500);          // Wait for 500ms
  stopTone();          // Stop the tone
  
  delay(200);          // Wait for a moment before the next tone

  playTone(TONE_D5);  // Play D5 (587 Hz)
  delay(500);          // Wait for 500ms
  stopTone();          // Stop the tone
  
  delay(200);          // Wait for a moment before the next tone

  playTone(TONE_E5);  // Play E5 (659 Hz)
  delay(500);          // Wait for 500ms
  stopTone();          // Stop the tone
  
  delay(200);          // Wait for a moment before the next tone
}
